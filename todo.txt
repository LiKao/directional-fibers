code:
    mu = A + B\delta step
    resampler for trace history when it gets to big
        e.g., keep every other point (and all candidate points)
    update readme
    trace object tracking sign changes and alpha mins?
    trace logger with format strings for different step data etc
    min num_procs,num_cpus really needed/good?
    jim:
        experiment whether cts relaxation has same fxpts as discrete
        very interesting ortho idea
    multisolver
        handles oddness, closed loops, and disconnected components
        oddness gets shortcut:
            closed loop -> two components
            open loop -> two traces combined into one component
    for local and multi, smarter termination criteria (e.g., time since last new fixed point >= time to last new fixed point, after many points found)
    more graceful error handling for critical directions (Baram email)
    _ prefix for private functions
    logger handling timing?
    repetitions in tests with multiple W
    "performance" tests: not asserts, but how often things are within expected tolerances, good statuses, etc
    more examples
        many at https://www.sfu.ca/~ssurjano/optimization.html
            Most amenable (diffy, easy mu?):
                https://www.sfu.ca/~ssurjano/rastr.html
                https://www.sfu.ca/~ssurjano/levy.html
                https://www.sfu.ca/~ssurjano/griewank.html
                *https://www.sfu.ca/~ssurjano/hart6.html

        multivariate poly finite soln
        1d: mackey-glass, population dynamics, volterra
        compare with various global solvers in scipy like basin hopping
    mayavi for 3d
    make Df a stack in rnn_cts example

research:
    forni morse theory idea
    does magnitude of alpha (or alpha') relate to svd (for global bound)?
    svd is ~n^3?  check that this dominates large N, and then try to just lower bound in < n^3 instead of compute exactly

experiments:
    reproduce last paper?
    how often is there single c to rule them all?
        keep sampling fibers until one finds all fixed points - both known by construction, and found by previous samples
            stronger if you use existing global solvers for ground truth
            NASA "kodiak" solver might work: https://github.com/nasa/Kodiak
        statistics on # points in fibers (not so different from last paper)
        patterns determining single c?
        patterns bounding min fiber svd?
    combo method:
        comparison with fiber, local
        empirical characterization of fiber topologies
        typical rate of new points being found

doc:
    requires numpy 1.14
